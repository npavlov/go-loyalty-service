name: "gophermart"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Set up services using Docker Compose
        run: |
          # Create a docker-compose.yml file
          cat <<EOF > docker-compose.yml
          version: '3.8'
          services:
            kafka:
              image: bitnami/kafka:3.5.1
              container_name: kafka
              ports:
                - "9092:9092"
              environment:
                - KAFKA_BROKER_ID=1
                - KAFKA_LISTENERS=PLAINTEXT://:9092
                - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
                - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            zookeeper:
              image: bitnami/zookeeper:3.8.0
              container_name: zookeeper
              ports:
                - "2181:2181"
              environment:
                - ALLOW_ANONYMOUS_LOGIN=yes
          EOF

          # Start services
          docker-compose up -d

      - name: Wait for Kafka to be ready
        run: |
          echo "Waiting for Kafka to start..."
          sleep 20

      - name: Create Kafka topics
        run: |
            echo "Creating required Kafka topics..."
            docker exec kafka kafka-topics.sh \
              --create \
              --topic orders \
              --bootstrap-server localhost:9092 \
              --replication-factor 1 \
              --partitions 1

      - name: Start Redis
        uses: supercharge/redis-github-action@1.8.0
        with:
          redis-version: 7

      - name: Set up Redis client
        run: |
          sudo apt-get update
          sudo apt-get install redis-tools

      - name: Test Redis connection
        run: |
          # Wait for Redis to start
          sleep 5
          redis-cli -h 127.0.0.1 -p 6379 ping

      - uses: ikalnytskyi/action-setup-postgres@v7
        id: postgres

      - name: Download autotests binaries
        uses: robinraju/release-downloader@v1.11
        with:
          repository: Yandex-Practicum/go-autotests
          latest: true
          fileName: "*"
          out-file-path: .tools
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup autotest binary
        run: |
          chmod -R +x $GITHUB_WORKSPACE/.tools
          mv $GITHUB_WORKSPACE/.tools/gophermarttest /usr/local/bin/gophermarttest
          mv $GITHUB_WORKSPACE/.tools/random /usr/local/bin/random

      - name: Build app
        run: make build

      - name: Prepare binaries
        run: |
          (cd cmd/accrual && chmod +x accrual_linux_amd64)

      - name: Test
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: praktikum
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          KAFKA: localhost:9092
          REDIS: 127.0.0.1:6379
          DATABASE_URI: ${{ steps.postgres.outputs.connection-uri }}
        run: |
          gophermarttest \
            -test.v -test.run=^TestGophermart$ \
            -gophermart-binary-path=bin/server \
            -gophermart-host=localhost \
            -gophermart-port=$(random unused-port) \
            -gophermart-database-uri=${{ steps.postgres.outputs.connection-uri }} \
            -accrual-binary-path=cmd/accrual/accrual_linux_amd64 \
            -accrual-host=localhost \
            -accrual-port=$(random unused-port) \
            -accrual-database-uri=${{ steps.postgres.outputs.connection-uri }}